# Code generated by shipbuilder init 1.21.0. DO NOT EDIT.

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      version-major: ${{ steps.version.outputs.version-major-only }}
      version-minor: ${{ format('{0}.{1}', steps.version.outputs.version-major-only, steps.version.outputs.version-minor-only) }}
      version-patch: ${{ format('{0}.{1}.{2}', steps.version.outputs.version-major-only, steps.version.outputs.version-minor-only, steps.version.outputs.version-patch-only) }}
    permissions:
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Generate next version
      id: version
      uses: conventional-actions/next-version@v1
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '18'
        cache: 'gradle'
    - name: Set gradle version
      uses: conventional-actions/write-version@v1
      with:
        version: ${{steps.version.outputs.version}}
        output_path: VERSION
    - name: Gradle
      run: ./gradlew bootJar
    - uses: actions/upload-artifact@v3
      with:
        name: docker
        path: docker
    - uses: actions/upload-artifact@v3
      with:
        name: build
        path: build/libs

  package-ketch-event-forwarder:
    name: Package ketch-event-forwarder
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Download docker artifact
      uses: actions/download-artifact@v3
      with:
        name: docker
        path: docker
    - name: Download docker artifact
      uses: actions/download-artifact@v3
      with:
        name: build
        path: build/libs
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        platforms: linux/amd64
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        buildkitd-flags: '--allow-insecure-entitlement network.host'
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Metadata for ketch-event-forwarder
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository_owner }}/java-ketch-forwarder
        tags: |
          type=raw,value=latest
          type=raw,value=${{ needs.build.outputs.version-major }}
          type=raw,value=${{ needs.build.outputs.version-minor }}
          type=raw,value=${{ needs.build.outputs.version-patch }}
    - name: Push ketch-event-forwarder container
      if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
      uses: docker/build-push-action@v6
      with:
        context: .
        file: docker/ketch-event-forwarder/Dockerfile
        push: true
        load: false
        allow: network.host
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  release:
    name: Release
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    needs:
    - build
    - package-ketch-event-forwarder
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Create Release
      uses: conventional-actions/create-release@v1
      with:
        tag_name: ${{ needs.build.outputs.version }}

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
